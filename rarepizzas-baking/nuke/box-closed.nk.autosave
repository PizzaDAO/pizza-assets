#! /Applications/Nuke12.1v2/Nuke12.1v2.app/Contents/MacOS/libnuke-12.1.2.dylib -nx
version 12.1 v2
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="-2324" y="27" w="2237" h="1005" screen="1">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="1574" stretch="1"/>
            <splitter orientation="2">
                <split size="578"/>
                <dock id="" activePageId="Viewer.1">
                    <page id="Viewer.1"/>
                </dock>
                <split size="407"/>
                <dock id="" activePageId="DAG.1">
                    <page id="DAG.1"/>
                    <page id="Curve Editor.1"/>
                    <page id="DopeSheet.1"/>
                </dock>
            </splitter>
            <split size="615"/>
            <dock id="" activePageId="Properties.1">
                <page id="Properties.1"/>
                <page id="uk.co.thefoundry.backgroundrenderview.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name /Users/anthonyshafer/Dropbox/RarePizzas/rarepizzas-shared/rarepizzas-baking/nuke/box-closed.nk
 frame 57
 lock_range true
 format "2048 1556 0 0 2048 1556 1 2K_Super_35(full-ap)"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 colorManagement Nuke
 workingSpaceLUT linear
 monitorLut sRGB
 int8Lut sRGB
 int16Lut sRGB
 logLut Cineon
 floatLut linear
}
Read {
 inputs 0
 file_type png
 file /Users/anthonyshafer/Dropbox/RarePizzas/rarepizzas-shared/rarepizzas-ingredients-submission/box-closed-designs/cardboard-color.png
 format "1540 1254 0 0 1540 1254 1 "
 origset true
 name Read5
 xpos -659
 ypos 126
}
Crop {
 box {320.8250046 479.3250122 417.1749954 572.6749878}
 reformat true
 crop false
 name Crop3
 xpos -659
 ypos 206
}
Dilate {
 size -4
 name Dilate1
 xpos -659
 ypos 285
 disable true
}
Constant {
 inputs 0
 color 1
 format "3072 3072 0 0 3072 3072 1 3k"
 name Constant1
 xpos -299
 ypos -287
}
Merge2 {
 name Merge2
 xpos -295
 ypos -160
}
Read {
 inputs 0
 file_type png
 file "/Users/anthonyshafer/Dropbox/RarePizzas/rarepizzas-shared/rarepizzas-box-closed/box-closed.\[value first].png"
 format "3072 3072 0 0 3072 3072 1 3k"
 first {{int((random(1,frame*1)*6)+0)}}
 last {{int((random(1,frame*1)*6)+0)}}
 origlast 15
 origset true
 on_error "nearest frame"
 version 1
 premultiplied true
 name Read2
 label "box-closed.\[% int(random(frame)*(last-first)) + first]\n"
 selected true
 xpos -457
 ypos -135
 addUserKnob {20 User}
 addUserKnob {22 Random l "" t "import nuke\nimport os.path as path\nimport random\n\nfolder = path.abspath(\"C:\\Users\\Jotun\\Downloads\")\nfile_names = nuke.getFileNameList(folder)\nfile_names = \[name for name in file_names if \".jpg\" in name]\nchosen = random.choice(file_names)\nfile_path = path.join(folder, chosen)\n\nreadNode = nuke.createNode(\"Read\")\nreadNode\[\"file\"].fromUserText(file_path)" +STARTLINE +STARTLINE}
}
Reformat {
 format "3072 3072 0 0 3072 3072 1 3k"
 name Reformat2
 xpos -298
 ypos -106
}
Constant {
 inputs 0
 channels rgb
 color 1
 format "3072 3072 0 0 3072 3072 1 3k"
 name Constant3
 xpos -140
 ypos -102
}
Merge2 {
 inputs 2
 name Merge3
 xpos -140
 ypos 27
}
Premult {
 name Premult2
 xpos -7
 ypos 27
}
set N53c54000 [stack 0]
Keyer {
 operation "luminance key"
 range {0.0004040302013 0.8456604631 1 1}
 name Keyer1
 xpos -295
 ypos 97
}
Constant {
 inputs 0
 channels rgb
 format "3072 3072 0 0 3072 3072 1 3k"
 name Constant2
 xpos 322
 ypos 36
}
set N53d41c00 [stack 0]
Roto {
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44800000 x44428000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Ellipse1 512 bezier
     {{cc
       {f 8192}
       {px 1
        {xc38fa570 xc38fa568}
        {x453a8097 x44d83ed2}
        {x438fa568 x438fa570}
        {x43863720 xc3863720}
        {x453ca306 x452b0307}
        {xc3863728 x43863720}
        {x438fa568 x438fa570}
        {x44fb7ed2 x4528e097}
        {xc38fa56c xc38fa560}
        {xc3863724 x43863728}
        {x44f739f6 x44d3f9f6}
        {x43863720 xc3863720}}}
      {cc
       {f 8192}
       {px 1
        {xc38fa570 xc38fa568}
        {x43080000 xc3ae0000}
        {x438fa568 x438fa570}
        {x43863720 xc3863720}
        {0 0}
        {xc3863728 x43863720}
        {x438fa568 x438fa570}
        {xc38bfffc x42f00000}
        {xc38fa56c xc38fa560}
        {xc3863724 x43863728}
        {xc3c00000 xc3be0000}
        {x43863720 xc3863720}}}}
     {tx 1 x450e2000 x44f30000}
     {a fx x42500000 fy x42500000 ff x40a00000 osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 tt x40e00000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 motionblur_shutter_offset_type centred
 feather 52
 feather_falloff 5
 source_black_outside true
 name Roto1
 xpos -40
 ypos 327
}
Blur {
 size 400
 filter box
 name Blur1
 xpos -40
 ypos 347
}
push 0
ColorCorrect {
 inputs 1+1
 gain 3.85
 name ColorCorrect1
 xpos -61
 ypos 409
}
Read {
 inputs 0
 file_type png
 file /Users/anthonyshafer/Dropbox/RarePizzas/rarepizzas-shared/rarepizzas-box-submissions/49138.png
 format "500 500 0 0 500 500 1 "
 origset true
 name Read7
 xpos 2022
 ypos 85
}
set N53d40c00 [stack 0]
push 0
Switch {
 inputs 2
 which {{clamp((random(frame,0.1)*9)-7) i}}
 name special
 label clamp((random(frame,0.1)*7)-4)
 xpos 1912
 ypos 260
}
Transform {
 translate {2198.5 -25.5}
 rotate -13.76087666
 scale {0.09099999815 0.05283870548}
 center {276 264}
 name Transform_special
 xpos 1912
 ypos 337
}
push $N53d40c00
push 0
Switch {
 inputs 2
 which {{"-(int(sin(2*pi*((frame+offset)*random(1,frame))/waveLength*random(1,r1))+1) * (maxVal-minVal) + minVal)" i K 0 x61 1 x62 0 x68 1 x69 0 x92 1}}
 name candy
 label clamp((random(frame,frame*0.1)*4)-5)
 xpos 1142
 ypos 249
}
Transform {
 translate {2410.5 66.5}
 rotate -12.52890396
 scale {0.123999998 0.0719999969}
 center {276 264}
 name Transform_candy
 xpos 1142
 ypos 337
}
push $N53d40c00
push 0
Switch {
 inputs 2
 which {{clamp((random(frame,0.01)*9)-4) i x30 0}}
 name vegan
 label clamp((random(frame,0.1)*7)-4)
 xpos 2022
 ypos 260
}
Transform {
 translate {2400.5 35.5}
 rotate 80.0737381
 scale {0.07900000364 0.09796000272}
 center {276 264}
 name Transform_vegan
 xpos 2022
 ypos 337
}
push $N53d40c00
Switch {
 which {{clamp((random(frame*4,0.1)*8)-4)}}
 name gf
 label clamp((random(frame,0.1)*7)-4)
 xpos 1582
 ypos 252
}
Transform {
 translate {2385 2}
 rotate -95.19410706
 scale {-0.0719999969 0.0719999969}
 center {276 264}
 name Transform_gf
 xpos 1582
 ypos 337
}
push $N53d40c00
push 0
Switch {
 inputs 2
 which {{clamp((random(frame,0.01)*11)-10)}}
 name space
 label clamp((random(frame,0.1)*7)-4)
 xpos 1472
 ypos 251
}
Transform {
 translate {2241.5 69}
 rotate -12.52890396
 scale {0.123999998 0.0719999969}
 center {276 264}
 name Transform_Space
 xpos 1472
 ypos 337
}
push $N53d40c00
Switch {
 which {{clamp((random(frame,0.09)*7)-6) i}}
 name herbs
 label clamp((random(frame,0.1)*7)-4)
 xpos 1362
 ypos 250
}
Transform {
 translate {2229.5 34.5}
 rotate 80.0737381
 scale {0.07900000364 0.09796000272}
 center {276 264}
 name Transform_Herbs
 xpos 1362
 ypos 337
}
push $N53d40c00
push 0
Switch {
 inputs 2
 which {{clamp((random(frame,1)*3)-4) i}}
 name crypto
 label clamp((random(frame,0.1)*7)-4)
 xpos 1252
 ypos 246
 addUserKnob {20 User}
 addUserKnob {41 which_1 l which T crypto.which}
 addUserKnob {7 amp R 0 10}
}
Transform {
 translate {2212 3}
 rotate -95.19419861
 scale {-0.0719999969 0.0719999969}
 center {276 264}
 name Transform_crypto
 xpos 1252
 ypos 337
}
push $N53d40c00
push 0
Switch {
 inputs 2
 which {{clamp((random(frame,0.008)*10)-8) i}}
 name peppes
 label clamp((random(frame,0.1)*7)-4)
 xpos 1802
 ypos 257
}
Transform {
 translate {2372.5 -27.5}
 rotate -13.76087666
 scale {0.09099999815 0.05283870548}
 center {276 264}
 name Transform_Peppes
 xpos 1802
 ypos 337
}
push $N53d40c00
Switch {
 which {{clamp((random(frame,0.1)*7)-4) i}}
 name poultry
 label clamp((random(frame,0.1)*7)-4)
 xpos 2132
 ypos 262
}
Transform {
 translate {2016.5 -29.5}
 rotate -6.709802628
 scale {0.09099999815 0.05283870548}
 center {276 264}
 name Transform_poulty
 xpos 2132
 ypos 337
}
push $N53d40c00
push 0
Switch {
 inputs 2
 which {{clamp((random(frame,0.09)*7)-5) i}}
 name nuts
 label clamp((random(frame,0.1)*7)-4)
 xpos 2352
 ypos 264
}
Transform {
 translate {2037 33}
 rotate 80.0737381
 scale {0.07900000364 0.09796000272}
 center {276 264}
 name Transform_nuts
 xpos 2352
 ypos 337
}
push $N53d40c00
Switch {
 which {{clamp((random(frame,0.02)*6)-10)}}
 name seafood
 label clamp((random(frame,0.1)*7)-4)
 xpos 2462
 ypos 263
}
Transform {
 translate {1863 65}
 rotate -14.57439709
 scale {0.123999998 0.0719999969}
 center {276 264}
 name Transform2
 xpos 2462
 ypos 337
}
push $N53d40c00
push 0
Switch {
 inputs 2
 which {{clamp((random(frame,0.8)*9)-7)}}
 name veggies
 label clamp((random(frame,0.1)*7)-4)
 xpos 2792
 ypos 269
}
Transform {
 translate {1846 1}
 rotate 90
 scale {-0.07400000095 0.08823075891}
 center {276 264}
 name Transform4
 xpos 2792
 ypos 337
}
push $N53d40c00
Switch {
 which {{clamp((random(frame,0.1)*7)-4)}}
 name cheese
 label clamp((random(frame,0.1)*7)-4)
 xpos 2572
 ypos 266
}
Transform {
 translate {1855.5 33.5}
 rotate 90
 scale {0.07900000364 0.09796000272}
 center {276 264}
 name Transform_cheese
 xpos 2572
 ypos 337
}
push $N53d40c00
Switch {
 which {{(random(frame,0.5)*15)-10}}
 name fungi
 label clamp((random(frame,0.1)*7)-4)
 xpos 2682
 ypos 267
}
Transform {
 translate {1835.5 -30}
 rotate 90
 scale {-0.05900000036 0.07034613937}
 center {276 264}
 name Transform_fungi
 xpos 2682
 ypos 337
}
push 0
push $N53d40c00
push 0
Switch {
 inputs 2
 which {{clamp((random(frame,0.01)*10)-8) i}}
 name bugs
 label clamp((random(frame,0.1)*7)-4)
 xpos 1692
 ypos 252
}
Transform {
 translate {2029 -1}
 rotate -5.389192581
 scale {0.123999998 0.0719999969}
 center {276 264}
 name Transform_Bugs
 xpos 1692
 ypos 337
}
push $N53d40c00
Switch {
 which {{clamp((random(frame,0.1)*7)-4) i}}
 name fruit
 label clamp((random(frame,0.1)*7)-4)
 xpos 2242
 ypos 262
}
Transform {
 translate {2048 63.5}
 scale {0.123999998 0.0719999969}
 center {276 264}
 name Transform_fruit
 xpos 2242
 ypos 337
}
Merge2 {
 inputs 16+1
 name Merge6
 xpos 1912
 ypos 643
 hide_input true
}
ColorCorrect {
 gain 0.1
 name ColorCorrect5
 xpos 1912
 ypos 682
}
Dot {
 name Dot7
 xpos 1946
 ypos 1156
}
push $N53d41c00
Text2 {
 font_size_toolbar 100
 font_width_toolbar 100
 font_height_toolbar 100
 message "Rare Pizza #\[format %03d \[frame]] Minimum Viable Pizza - The first and only pie minted directly from Shrimp's oven and the chef's choice. \nTake it or leave it, Shrimp don't care."
 old_message {{82 97 114 101 32 80 105 122 122 97 32 35 48 53 55 32 77 105 110 105 109 117 109 32 86 105 97 98 108 101 32 80 105 122 122 97 32 45 32 84 104 101 32 102 105 114 115 116 32 97 110 100 32 111 110 108 121 32 112 105 101 32 109 105 110 116 101 100 32 100 105 114 101 99 116 108 121 32 102 114 111 109 32 83 104 114 105 109 112 39 115 32 111 118 101 110 32 97 110 100 32 116 104 101 32 99 104 101 102 39 115 32 99 104 111 105 99 101 46 32 10 84 97 107 101 32 105 116 32 111 114 32 108 101 97 118 101 32 105 116 44 32 83 104 114 105 109 112 32 100 111 110 39 116 32 99 97 114 101 46}
   }
 old_expression_markers {{12 14}
   }
 box {19 26 2186 404}
 yjustify center
 transforms {{0 2}
   }
 cursor_position 132
 font {{ SignPainter : HouseScript : Supplemental/SignPainter.ttc : 0 }}
 center {1024 778}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{883 316.5}
   }
 group_animations {{0} imported: 0 selected: items: "root transform/"}
 animation_layers {{1 11 1024 778 0 0 1 1 0 0 0 0}
   }
 color {1 1 0.1 1}
 color_panelDropped true
 enable_shadows true
 name Text1
 xpos 250
 ypos 389
}
push $N53d41c00
Text2 {
 font_size_toolbar 100
 font_width_toolbar 100
 font_height_toolbar 100
 message "\[] seafood\n\[] cheese\n\[] veggies\n\[] fungi\n"
 old_message {{91 93 32 115 101 97 102 111 111 100 10 91 93 32 99 104 101 101 115 101 10 91 93 32 118 101 103 103 105 101 115 10 91 93 32 102 117 110 103 105 10}
   }
 old_expression_markers {{0 1 11 12 21 22 32 33}
   }
 box {2220 57 2424 391}
 transforms {{0 2}
   }
 cursor_position 31
 font {{ SF Movie Poster : Bold : SF Movie Poster Bold.ttf : 0 }}
 center {1024 778}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{883 316.5}
   }
 group_animations {{0} imported: 0 selected: items: "root transform/"}
 animation_layers {{1 11 1024 778 0 0 1 1 0 0 0 0}
   }
 color {1 1 0.1 1}
 color_panelDropped true
 name Text_i1
 xpos 390
 ypos 262
}
Text2 {
 font_size_toolbar 100
 font_width_toolbar 100
 font_height_toolbar 100
 message "\[] fruit\n\[] nuts\n\[] bugs\n\[] poultry\n"
 old_message {{91 93 32 102 114 117 105 116 10 91 93 32 110 117 116 115 10 91 93 32 98 117 103 115 10 91 93 32 112 111 117 108 116 114 121 10}
   }
 old_expression_markers {{0 1 9 10 17 18 25 26}
   }
 box {2425.75 53 2622.25 387}
 transforms {{0 2}
   }
 cursor_position 29
 font {{ SF Movie Poster : Bold : SF Movie Poster Bold.ttf : 0 }}
 center {1024 778}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{883 316.5}
   }
 group_animations {{0} imported: 0 selected: items: "root transform/"}
 animation_layers {{1 11 1024 778 0 0 1 1 0 0 0 0}
   }
 color {1 1 0.1 1}
 color_panelDropped true
 name Text_i2
 xpos 485
 ypos 262
}
Text2 {
 font_size_toolbar 100
 font_width_toolbar 100
 font_height_toolbar 100
 message "\[] space\n\[] herbs\n\[] crypto\n\[] special\n"
 old_message {{91 93 32 115 112 97 99 101 10 91 93 32 104 101 114 98 115 10 91 93 32 99 114 121 112 116 111 10 91 93 32 115 112 101 99 105 97 108 10}
   }
 old_expression_markers {{0 1 9 10 18 19 28 29}
   }
 box {2635.75 53 2832.25 387}
 transforms {{0 2}
   }
 cursor_position 4
 font {{ SF Movie Poster : Bold : SF Movie Poster Bold.ttf : 0 }}
 center {1024 778}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{883 316.5}
   }
 group_animations {{0} imported: 0 selected: items: "root transform/"}
 animation_layers {{1 11 1024 778 0 0 1 1 0 0 0 0}
   }
 color {1 1 0.1 1}
 color_panelDropped true
 name Text_i3
 xpos 584
 ypos 262
}
Text2 {
 font_size_toolbar 100
 font_width_toolbar 100
 font_height_toolbar 100
 message "\[] candy\n\[] vegan\n\[] gf\n\[] peppes\n"
 old_message {{91 93 32 99 97 110 100 121 10 91 93 32 118 101 103 97 110 10 91 93 32 103 102 10 91 93 32 112 101 112 112 101 115 10}
   }
 old_expression_markers {{0 1 9 10 18 19 24 25}
   }
 box {2833.75 53 3030.25 387}
 transforms {{0 2}
   }
 cursor_position 33
 font {{ SF Movie Poster : Bold : SF Movie Poster Bold.ttf : 0 }}
 center {1024 778}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{883 316.5}
   }
 group_animations {{0} imported: 0 selected: items: "root transform/"}
 animation_layers {{1 11 1024 778 0 0 1 1 0 0 0 0}
   }
 color {1 1 0.1 1}
 color_panelDropped true
 name Text_i4
 xpos 683
 ypos 262
}
Transform {
 scale {1 0.8}
 center {2594 210}
 name Transform1
 xpos 683
 ypos 311
}
Roto {
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44c00000 x44c00000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle2 512 bezier
     {{cc
       {f 8192}
       {px
        {x40400000 x40c00000}
        {{0}
	 {xc2e2aaac}}
        {{x45093000}
	 {x43c50000}}
        {{x438ed558}
	 {0}}
        {{xc38ed558}
	 {0}}
        {{x453eaccd}
	 {x43c3cccd}}
        {{0}
	 {xc2e2aaac}}
        {{0}
      {x42e2aaac}}
        {{x453ecc37 x453ec000}
      {x42130fe0 x42400000}}
        {{xc38ed558}
      {0}}
        {{x438ed558}
      {0}}
        {{x45093c37 x45093000}
      {x42130fe0 x42400000}}
        {{0}
      {x42e2aaac}}}}     idem}
     {tx x40c00000 x4523f800 x435a0000}
     {a osw x41200000 osf 0 str 1 spx x44c00000 spy x44c00000 sb 1 ltn x40c00000 ltm x40c00000 tt x41000000 bm x41400000 inv 1}}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x40c00000
        {0 xc2e2aaac}
        {x4509b800 x43c04cce}
        {x438ed558 0}
        {xc38ed558 0}
        {x453e3800 x43be999b}
        {0 xc2e2aaac}
        {0 x42e2aaac}
        {x453e5333 x425b3334}
        {xc38ed558 0}
        {x438ed558 0}
        {x45099ccd x425b3334}
        {0 x42e2aaac}}}     idem}
     {tx x40c00000 x4523f800 x435a0000}
     {a osw x41200000 osf 0 str 1 spx x44c00000 spy x44c00000 sb 1 ltn x40c00000 ltm x40c00000 tt x41000000 bm x41600000 inv 1}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1536 1536}
 colorOverlay {0 0 0 0}
 blending_mode minus
 lifetime_type "all frames"
 lifetime_start 6
 lifetime_end 6
 motionblur_shutter_offset_type centred
 inverted true
 source_black_outside true
 name Roto3
 xpos 683
 ypos 335
}
Merge2 {
 inputs 2
 name Merge4
 xpos 683
 ypos 479
}
CornerPin2D {
 to1 {182 204}
 to2 {2820 202}
 to3 {3905 2095}
 to4 {-790 2105}
 invert false
 from1 {0 0}
 from2 {3072 0}
 from3 {3072 3072}
 from4 {0 3072}
 name CornerPin2D2
 xpos 683
 ypos 515
}
push $N53d41c00
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44800000 x44428000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x40c00000
        {0 x40000000}
        {x44a8cbc1 x43d9b3bb}
        {0 xc0000000}
        {xc3316938 x3f4aa000}
        {x44bbc6c1 x4393cde3}
        {x432a96d0 xbf445000}
        {0 0}
        {x44cf87a2 x43d89616}
        {0 0}}}     idem}
     {tx x40c00000 x44bbc000 x43b40000}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x40c00000 ltm x40c00000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 6
 lifetime_end 6
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto2
 xpos 818
 ypos 222
}
Merge2 {
 inputs 2
 operation out
 name Out
 xpos 683
 ypos 579
}
push $N53c54000
Grade {
 channels alpha
 name Grade2
 xpos -295
 ypos 163
}
set N4f7f6c00 [stack 0]
CornerPin2D {
 to1 {196 469}
 to2 {2800 485}
 to3 {2440 2185}
 to4 {592 2189}
 invert false
 from1 {0 0}
 from2 {3072 0}
 from3 {3072 3072}
 from4 {0 3072}
 name CornerPin2D1
 xpos -295
 ypos 209
}
Blur {
 size 4.4
 name Blur5
 xpos -165
 ypos 235
}
set N4f7f6000 [stack 0]
Noise {
 output rgb
 premult alpha
 size 5.6
 lacunarity 4.35
 gain 0.121
 center {1536 1536}
 name Noise1
 xpos -273
 ypos 272
}
push $N4f7f6000
Merge2 {
 inputs 2
 operation multiply
 mix 0.26
 name Multiply
 xpos -165
 ypos 307
}
Grade {
 channels alpha
 gamma 1.65
 name Grade1
 xpos -165
 ypos 342
}
set N4f83f400 [stack 0]
push $N4f83f400
Keyer {
 invert true
 operation "luminance key"
 range {0 0.004267569001 1 1}
 name Keyer2
 xpos -182
 ypos 669
}
Merge2 {
 inputs 2
 operation multiply
 name Multiply2
 xpos -117
 ypos 734
}
set N4f83ec00 [stack 0]
Read {
 inputs 0
 file_type png
 file /Users/anthonyshafer/Dropbox/RarePizzas/rarepizzas-shared/rarepizzas-ingredients-submission/box-closed-designs/cardboard-color.png
 format "1540 1254 0 0 1540 1254 1 "
 origset true
 name Read4
 xpos -458
 ypos 124
}
Crop {
 box {1225 1030.5 1423.5 1231.5}
 reformat true
 crop false
 name Crop1
 xpos -458
 ypos 204
}
Dilate {
 size 1
 name Dilate3
 xpos -458
 ypos 290
}
Blur {
 size 22.5
 filter box
 name Blur4
 xpos -458
 ypos 380
}
Read {
 inputs 0
 file_type png
 file /Users/anthonyshafer/Dropbox/RarePizzas/rarepizzas-shared/rarepizzas-ingredients-submission/box-closed-designs/cardboard-color.png
 format "1540 1254 0 0 1540 1254 1 "
 origset true
 name Read3
 xpos -547
 ypos 123
}
Crop {
 box {1226 782 1424 986}
 reformat true
 crop false
 name Crop2
 xpos -547
 ypos 203
}
Dilate {
 size 1
 name Dilate2
 xpos -547
 ypos 288
}
Blur {
 size 22.5
 filter box
 name Blur3
 xpos -547
 ypos 378
}
Read {
 inputs 0
 file_type png
 file /Users/anthonyshafer/Dropbox/RarePizzas/rarepizzas-shared/rarepizzas-ingredients-submission/box-closed-designs/cardboard-color.png
 format "1540 1254 0 0 1540 1254 1 "
 origset true
 name Read6
 xpos -781
 ypos 126
}
Crop {
 box {509.7281256 589.0406265 674.2718744 750.9593735}
 reformat true
 crop false
 name Crop4
 xpos -781
 ypos 206
}
ColorCorrect {
 saturation 2.05
 name ColorCorrect2
 xpos -781
 ypos 230
}
Dilate {
 size -4
 name Dilate4
 xpos -781
 ypos 286
}
Blur {
 size 12.5
 name Blur6
 xpos -781
 ypos 376
}
set N4f6cb800 [stack 0]
Blur {
 size 12.5
 name Blur2
 xpos -659
 ypos 376
 disable true
}
push $N4f6cb800
Switch {
 inputs 4
 which {{random(1,frame)*6}}
 name Switch1
 xpos -612
 ypos 439
}
Reformat {
 format "3072 3072 0 0 3072 3072 1 3k"
 resize fill
 name Reformat1
 xpos -612
 ypos 507
}
push $N4f83f400
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.alpha 0 3 rgba.alpha 0 3 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.red 0 0 rgba.red 0 0"
 name Shuffle1
 xpos -294
 ypos 391
}
Group {
 inputs 2
 name Gizmo2
 help "Remap the luminance of the RGB channels based on an input colour ramp."
 xpos -349
 ypos 647
}
 Input {
  inputs 0
  name ramp
  xpos -120
  ypos -107
  number 1
 }
 Reformat {
  type "to box"
  box_width {{"\[input \[node this.parent] 0].width" i}}
  box_height {{"\[input \[node this.parent] 0].height" i}}
  box_fixed true
  name Reformat1
  xpos -120
  ypos 1
 }
 Input {
  inputs 0
  name image
  xpos 58
  ypos -105
 }
 Saturation {
  saturation 0
  name Saturation1
  xpos 58
  ypos -35
 }
 MergeExpression {
  inputs 2
  expr0 Ar(Br*width,Bg)
  expr1 Ag(Br*width,Bg)
  expr2 Ab(Br*width,Bg)
  expr3 Ba
  name MergeExpression1
  selected true
  xpos 58
  ypos 1
 }
 Output {
  name Output1
  xpos 58
  ypos 57
 }
end_group
Merge2 {
 inputs 2
 operation matte
 name Multiply1
 xpos -294
 ypos 758
}
Premult {
 name Premult1
 xpos -294
 ypos 847
}
Read {
 inputs 0
 file_type png
 file /Users/anthonyshafer/Dropbox/RarePizzas/rarepizzas-shared/rarepizzas-ingredients-db/9000-box-closed-cardboard.png
 format "3000 3000 0 0 3000 3000 1 "
 origset true
 name Read1
 xpos 76
 ypos 351
}
Merge2 {
 inputs 2
 name Merge1
 xpos -37
 ypos 903
}
ColorCorrect {
 inputs 1+1
 gain 0.34
 name ColorCorrect3
 xpos 675
 ypos 1006
}
Merge2 {
 inputs 2
 mix 0.88
 name Merge5
 xpos 675
 ypos 1153
}
set N36bf3400 [stack 0]
Write {
 file /Users/anthonyshafer/Dropbox/RarePizzas/rarepizzas-shared/rarepizzas-box-closed/1.png
 file_type png
 checkHashOnRead false
 version 1
 name Write1
 xpos 675
 ypos 1244
}
push 0
push 0
push 0
push 0
push 0
push 0
push 0
push $N4f7f6c00
push $N4f6cb800
Viewer {
 inputs 10
 frame_range 1-4
 input_number 9
 name Viewer1
 xpos -990
 ypos 593
}
Group {
 inputs 0
 name Group2
 help "Allows the easy creation of a variety of Waveform Expressions for use in manipulating knob values."
 xpos 2383
 ypos 81
 addUserKnob {20 main l Main}
 addUserKnob {26 unnamed_1 l "" +STARTLINE T " "}
 addUserKnob {68 type l "Wave Type" t "Controls what type of wave to generate." M {Random Noise Sine Triangle Square Sawtooth/Sawtooth "Sawtooth/Sawtooth (Parabolic)" "Sawtooth/Sawtooth (Parabolic reversed)" "Sawtooth/Sawtooth (Exponential)" Bounce "" "" "" "" ""}}
 type Square
 addUserKnob {7 minVal l "Min Value" t "Minimum value you want the wave to reach." R 0 10}
 minVal 1
 addUserKnob {7 maxVal l "Max Value" t "Maximum value you want the wave to reach." -STARTLINE R 0 10}
 addUserKnob {7 waveLength l WaveLength t "Controls the frequency or cycle length of the wave. The number of frames before the pattern repeats." R 0 50}
 waveLength 5.4
 addUserKnob {7 offset l Offset t "Offsets the frame value to allow control of values at a certain frame" R 0 10}
 offset 0.5
 addUserKnob {7 r1}
 addUserKnob {7 rOffset}
 rOffset 0.105
 addUserKnob {7 rAttr}
 rAttr 0.605
 addUserKnob {6 invert +STARTLINE}
 invert true
 addUserKnob {26 unnamed l "" +STARTLINE T " "}
 addUserKnob {22 expButton l "Generate Expression" T "node = nuke.thisNode()\ntype = node.knob('type').getValue()\nexpText = node.knob('expText')\nexpFormula = node.knob('formula')\nexpResult = node.knob('expResult')\ndef setExp():\n    if type == 0: #Random\n        exp = 'random((frame+%s)/%s) * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 1: #Noise\n        exp = '(noise((frame+%s)/%s)+1)/2 * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 2: #Sine\n        exp = '(sin(2*pi*(frame+%s)/%s)+1)/2 * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 3: #Triangle\n        exp = '(asin(sin(2*pi*(frame+%s)/%s))/pi+0.5) * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 4: #Square\n        exp = 'int(sin(2*pi*(frame+%s)/%s)+1) * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 5: #Sawtooth\n        exp = '((frame+%s) %% %s)/%s * (%s-%s) + %s' %(offset,waveLength,waveLength,maxVal,minVal,minVal)\n    if type == 6: #Sawtooth(Parabolic)\n        exp = 'sin((4.93480220054468*(frame+%s)/(pi*%s)) %% (pi/2)) * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 7: #Sawtooth(Parabolic Reversed)\n        exp = 'cos((4.93480220054468*(frame+%s)/(pi*%s)) %% (pi/2)) * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 8: #Sawtooth (Exponential)\n        exp = '(exp(2*pi*((frame+%s) %% %s)/%s)-1)/exp(2*pi) * (%s-%s) + %s' %(offset,waveLength,waveLength,maxVal,minVal,minVal)\n    if type == 9: #Bounce\n        exp = 'abs(sin(pi*(frame + %s)/%s))* (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    return exp\n\nwaveLength = 'waveLength'\noffset = 'offset'\nmaxVal = 'maxVal'\nminVal = 'minVal'\nexpResult.setExpression(setExp())\nexpFormula.setValue(setExp())\n\nwaveLength = node.knob('waveLength').getValue()\noffset = node.knob('offset').getValue()\nmaxVal = node.knob('maxVal').getValue()\nminVal = node.knob('minVal').getValue()\nexpText.setValue(setExp())" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {7 expResult l Result t "The calculated result of the wave at the given frame. Link to this value if you want to control the expression from this node."}
 expResult {{"int(sin(2*pi*(frame+offset)/waveLength)+1) * (maxVal-minVal) + minVal" i x93 0}}
 addUserKnob {26 unnamed_2 l "" +STARTLINE T " "}
 addUserKnob {1 expText l Expression t "The wave in expression form. For copying to another knobs expression value."}
 expText "int(sin(2*pi*(frame+0.5)/36.2)+1) * (0.0--1.0) + -1.0"
 addUserKnob {26 unnamed_3 l "" +STARTLINE T " "}
 addUserKnob {1 formula l Formula t "The formula that generates the wave."}
 formula "int(sin(2*pi*(frame+offset)/waveLength)+1) * (maxVal-minVal) + minVal"
}
end_group
push $N53c54000
Write {
 in_colorspace scene_linear
 out_colorspace scene_linear
 name Write2
 xpos 127
 ypos 27
}
Group {
 inputs 0
 name Group1
 help "Allows the easy creation of a variety of Waveform Expressions for use in manipulating knob values."
 xpos 2274
 ypos 83
 addUserKnob {20 main l Main}
 addUserKnob {26 unnamed_1 l "" +STARTLINE T " "}
 addUserKnob {68 type l "Wave Type" t "Controls what type of wave to generate." M {Random Noise Sine Triangle Square Sawtooth/Sawtooth "Sawtooth/Sawtooth (Parabolic)" "Sawtooth/Sawtooth (Parabolic reversed)" "Sawtooth/Sawtooth (Exponential)" Bounce "" "" "" "" ""}}
 type Square
 addUserKnob {7 minVal l "Min Value" t "Minimum value you want the wave to reach." R 0 10}
 minVal 1
 addUserKnob {7 maxVal l "Max Value" t "Maximum value you want the wave to reach." -STARTLINE R 0 10}
 addUserKnob {7 waveLength l WaveLength t "Controls the frequency or cycle length of the wave. The number of frames before the pattern repeats." R 0 50}
 waveLength 36.2
 addUserKnob {7 offset l Offset t "Offsets the frame value to allow control of values at a certain frame" R 0 10}
 offset 0.5
 addUserKnob {7 r1}
 r1 0.355
 addUserKnob {7 rOffset}
 rOffset 0.06
 addUserKnob {7 rAttr}
 rAttr 0.79
 addUserKnob {6 invert +STARTLINE}
 invert true
 addUserKnob {26 unnamed l "" +STARTLINE T " "}
 addUserKnob {22 expButton l "Generate Expression" T "node = nuke.thisNode()\ntype = node.knob('type').getValue()\nexpText = node.knob('expText')\nexpFormula = node.knob('formula')\nexpResult = node.knob('expResult')\ndef setExp():\n    if type == 0: #Random\n        exp = 'random((frame+%s)/%s) * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 1: #Noise\n        exp = '(noise((frame+%s)/%s)+1)/2 * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 2: #Sine\n        exp = '(sin(2*pi*(frame+%s)/%s)+1)/2 * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 3: #Triangle\n        exp = '(asin(sin(2*pi*(frame+%s)/%s))/pi+0.5) * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 4: #Square\n        exp = 'int(sin(2*pi*(frame+%s)/%s)+1) * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 5: #Sawtooth\n        exp = '((frame+%s) %% %s)/%s * (%s-%s) + %s' %(offset,waveLength,waveLength,maxVal,minVal,minVal)\n    if type == 6: #Sawtooth(Parabolic)\n        exp = 'sin((4.93480220054468*(frame+%s)/(pi*%s)) %% (pi/2)) * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 7: #Sawtooth(Parabolic Reversed)\n        exp = 'cos((4.93480220054468*(frame+%s)/(pi*%s)) %% (pi/2)) * (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    if type == 8: #Sawtooth (Exponential)\n        exp = '(exp(2*pi*((frame+%s) %% %s)/%s)-1)/exp(2*pi) * (%s-%s) + %s' %(offset,waveLength,waveLength,maxVal,minVal,minVal)\n    if type == 9: #Bounce\n        exp = 'abs(sin(pi*(frame + %s)/%s))* (%s-%s) + %s' %(offset,waveLength,maxVal,minVal,minVal)\n    return exp\n\nwaveLength = 'waveLength'\noffset = 'offset'\nmaxVal = 'maxVal'\nminVal = 'minVal'\nexpResult.setExpression(setExp())\nexpFormula.setValue(setExp())\n\nwaveLength = node.knob('waveLength').getValue()\noffset = node.knob('offset').getValue()\nmaxVal = node.knob('maxVal').getValue()\nminVal = node.knob('minVal').getValue()\nexpText.setValue(setExp())" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {7 expResult l Result t "The calculated result of the wave at the given frame. Link to this value if you want to control the expression from this node."}
 expResult {{"clamp(-(int(sin(2*pi*((frame+offset)*random(1,frame))/waveLength*random(1,r1)+rAttr)+1+rOffset)* (maxVal-minVal) + minVal))" K x93 0}}
 addUserKnob {26 unnamed_2 l "" +STARTLINE T " "}
 addUserKnob {1 expText l Expression t "The wave in expression form. For copying to another knobs expression value."}
 expText "int(sin(2*pi*(frame+0.0)/1.8)+1) * (1.0-0.0) + 0.0"
 addUserKnob {26 unnamed_3 l "" +STARTLINE T " "}
 addUserKnob {1 formula l Formula t "The formula that generates the wave."}
 formula "int(sin(2*pi*(frame+offset)/waveLength)+1) * (maxVal-minVal) + minVal"
}
end_group
push $N36bf3400
push 0
push 0
push 0
push 0
push 0
push 0
push 0
push $N4f83ec00
push $N36bf3400
Viewer {
 inputs 10
 frame 57
 frame_range 1-100
 frame_range_lock true
 downrez 4
 roi {0.3289999962 -0.8899999857 0.9300000072 -0.7509999871}
 name Viewer2
 xpos 1128
 ypos 1011
}
